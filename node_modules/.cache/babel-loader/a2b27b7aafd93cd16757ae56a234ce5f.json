{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/Drum-Machine-TLP/src/components/DrumPad.jsx\";\nimport React, { Component } from 'react';\nimport './styles/DrumPad.css';\nconst activeStyle = {\n  backgroundColor: \"var(--color-aqua)\",\n  boxShadow: \"0 3px 'var(--color-aqua)'\",\n  height: 77,\n  marginTop: 13\n};\nconst inactiveStyle = {\n  backgroundColor: \"grey\",\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px black\"\n};\nexport default class DrumPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      padStyle: inactiveStyle\n    };\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.activatePad = this.activatePad.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyCode) {\n      this.playSound();\n    }\n  }\n\n  activatePad() {\n    if (this.props.power) {\n      this.state.padStyle.backgroundColor === \"var(--color-aqua)\" ? this.setState({\n        padStyle: inactiveStyle\n      }) : this.setState({\n        padStyle: activeStyle\n      });\n    } else {\n      this.state.padStyle.marginTop === 13 ? this.setState({\n        padStyle: inactiveStyle\n      }) : this.setState({\n        padStyle: {\n          height: 77,\n          marginTop: 13,\n          backgroundColor: 'grey',\n          boxShadow: \"0 3px grey\"\n        }\n      });\n    }\n  }\n\n  playSound(e) {\n    const sound = document.getElementById(this.props.padLetter);\n    sound.currentTime = 0;\n    sound.play();\n    this.activatePad();\n    setTimeout(() => this.activatePad(), 100);\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: this.prop.clipId,\n      onClick: this.playSound,\n      className: \"drum-pad\",\n      style: this.state.padStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      className: \"clip\",\n      id: this.props.keyTrigger,\n      src: this.props.clip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), this.props.keyTrigger);\n  }\n\n}","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/Drum-Machine-TLP/src/components/DrumPad.jsx"],"names":["React","Component","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","constructor","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","keyCode","power","setState","sound","getElementById","padLetter","currentTime","play","setTimeout","updateDisplay","clipId","replace","render","prop","keyTrigger","clip"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles/DrumPad.css';\n\nconst activeStyle = {\n  backgroundColor: \"var(--color-aqua)\",\n  boxShadow: \"0 3px 'var(--color-aqua)'\",\n  height: 77,\n  marginTop: 13,\n};\n\nconst inactiveStyle = {\n  backgroundColor: \"grey\",\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px black\",\n};\nexport default class DrumPad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            padStyle: inactiveStyle\n        }\n        this.playSound = this.playSound.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.activatePad = this.activatePad.bind(this);  \n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    handleKeyPress(e) {\n        if (e.keyCode === this.props.keyCode) {\n            this.playSound()\n        }\n    }\n\n\n\n    activatePad(){\n        if (this.props.power) {\n            this.state.padStyle.backgroundColor === \"var(--color-aqua)\"\n              ? this.setState({\n                  padStyle: inactiveStyle,\n                })\n              : this.setState({\n                  padStyle: activeStyle,\n                });\n        } else {\n            this.state.padStyle.marginTop === 13 ? this.setState({\n                padStyle: inactiveStyle\n            }) : this.setState({\n                padStyle: {\n                    height: 77,\n                    marginTop: 13,\n                    backgroundColor: 'grey',\n                    boxShadow: \"0 3px grey\"\n                }\n            });\n        }\n    }\n    playSound(e) {\n        const sound = document.getElementById(this.props.padLetter);\n        sound.currentTime = 0;\n        sound.play();\n        this.activatePad();\n        setTimeout(() => this.activatePad(), 100);\n        \n        this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n    }\n    render() {\n        return (\n          <div\n            id={this.prop.clipId}\n            onClick={this.playSound}\n            className=\"drum-pad\"\n            style={this.state.padStyle}\n          >\n            <audio\n              className=\"clip\"\n              id={this.props.keyTrigger}\n              src={this.props.clip}\n            ></audio>\n            {this.props.keyTrigger}\n          </div>\n        );\n    }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}