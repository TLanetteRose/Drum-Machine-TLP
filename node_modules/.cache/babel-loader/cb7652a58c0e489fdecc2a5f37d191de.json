{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/Drum-Machine-TLP/src/components/DrumPad.jsx\";\nimport React, { Component } from 'react';\nimport './styles/DrumPad.css';\nconst activeStyle = {\n  backgroundColor: \"var(--color-dk-cyan)\",\n  boxShadow: \"0 3px var(--color-very-lt-gray)\",\n  height: 77,\n  marginTop: 13\n};\nconst inactiveStyle = {\n  backgroundColor: 'var(--color-deep-sky-aqua)',\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px black\"\n};\nexport default class DrumPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      padStyle: inactiveStyle\n    };\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.activatePad = this.activatePad.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyCode) {\n      this.playSound();\n    }\n  }\n\n  activatePad() {\n    if (this.props.power) {\n      this.state.padStyle.backgroundColor === 'var(--color-md-steel-blue)' ? this.setState({\n        padStyle: inactiveStyle\n      }) : this.setState({\n        padStyle: activeStyle\n      });\n    } else {\n      this.state.padStyle.marginTop === 13 ? this.setState({\n        padStyle: inactiveStyle\n      }) : this.setState({\n        padStyle: {\n          height: 77,\n          marginTop: 13,\n          backgroundColor: \"var(--color-deep-navy-blue)\",\n          boxShadow: \"0 3px var(--color-deep-navy-blue)\"\n        }\n      });\n    }\n  }\n\n  playSound(e) {\n    const sound = document.getElementById(this.props.keyTrigger);\n    sound.currentTime = 0;\n    sound.play();\n    setTimeout(() => this.activatePad(), 100);\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.clipId,\n      onClick: this.playSound,\n      className: \"drum-pad\",\n      style: this.state.padStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      className: \"clip\",\n      id: this.props.keyTrigger,\n      src: this.props.clip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), this.props.keyTrigger);\n  }\n\n}","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/Drum-Machine-TLP/src/components/DrumPad.jsx"],"names":["React","Component","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","constructor","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","keyCode","power","setState","sound","getElementById","keyTrigger","currentTime","play","setTimeout","updateDisplay","clipId","replace","render","clip"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles/DrumPad.css';\n\n\nconst activeStyle = {\n  backgroundColor: \"var(--color-dk-cyan)\",\n  boxShadow: \"0 3px var(--color-very-lt-gray)\",\n  height: 77,\n  marginTop: 13\n}\n\nconst inactiveStyle = {\n  backgroundColor: 'var(--color-deep-sky-aqua)',\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px black\"\n}\n\nexport default class DrumPad extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n          padStyle: inactiveStyle\n        }  \n        this.playSound =  this.playSound.bind(this); \n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.activatePad = this.activatePad.bind(this);\n    }\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleKeyPress);\n    }\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    handleKeyPress(e) {\n      if (e.keyCode === this.props.keyCode) {\n        this.playSound();\n      }\n    }\n    activatePad() {\n      if (this.props.power) {\n        this.state.padStyle.backgroundColor === 'var(--color-md-steel-blue)' ? this.setState({\n          padStyle: inactiveStyle\n        }) : this.setState({\n          padStyle: activeStyle\n        });\n      } else {\n        this.state.padStyle.marginTop === 13\n          ? this.setState({\n              padStyle: inactiveStyle,\n            })\n          : this.setState({\n              padStyle: {\n                height: 77,\n                marginTop: 13,\n                backgroundColor: \"var(--color-deep-navy-blue)\",\n                boxShadow: \"0 3px var(--color-deep-navy-blue)\"\n              }\n            });\n      }\n    }\n    playSound(e) {\n      const sound = document.getElementById(this.props.keyTrigger);\n      sound.currentTime = 0;\n      sound.play();\n      setTimeout(() => this.activatePad(), 100);\n      this.props.updateDisplay(this.props.clipId.replace(/-/g,' '));\n    }\n    render () {\n      return (\n        <div id={this.props.clipId} onClick={this.playSound} className=\"drum-pad\" style={this.state.padStyle}>\n          <audio className='clip' id={this.props.keyTrigger} src={this.props.clip}></audio>\n          {this.props.keyTrigger}\n        </div>\n      )\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}