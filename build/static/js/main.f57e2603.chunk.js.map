{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/DrumPad.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Jumbotron","fluid","className","Container","Footer","href","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","document","addEventListener","this","removeEventListener","e","keyCode","power","setState","sound","getElementById","keyTrigger","currentTime","play","setTimeout","updateDisplay","clipId","replace","id","onClick","style","src","clip","Component","bankOne","url","bankTwo","App","display","String","fromCharCode","currentPadBank","currentPadBankId","sliderVal","displayClipName","selectBank","adjustVolume","powerControl","clearDisplay","name","target","value","Math","round","powerSlider","float","bankSlider","slice","call","getElementsByClassName","forEach","volume","clipVolume","type","min","max","step","onChange","PadBank","padBank","map","drumObj","i","padBankArr","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f57e2603.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/Header.css';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nexport const Header = () => (\n    <Jumbotron fluid className=\"jumbotron header-container\">\n        <Container>\n            <h1 className=\"header-title text-center\">Rebel-Cow Drum Machine </h1>\n        </Container>\n    </Jumbotron>\n    );","import React from 'react';\nimport './styles/Footer.css';\n\nimport Container from 'react-bootstrap/Container';\n\nexport const Footer = () => (\n    <footer className=\"footer\">\n        <Container className=\"footer-container\">\n            <p>Drum Machine App created by {\" \"} <a href=\"https://github.com/TLanetteRose\">\n               {\" \"} \n               <span>T.Lanette Pollard</span></a> &nbsp; FreeCodeCamp Front End Libraries Project</p>\n        </Container>\n    </footer>\n);","import React, { Component } from 'react';\nimport './styles/DrumPad.css';\n\n\nconst activeStyle = {\n  backgroundColor: \"var(--color-dk-cyan)\",\n  boxShadow: \"0 3px var(--color-deep-sky-aqua)\",\n  height: 77,\n  marginTop: 13\n}\n\nconst inactiveStyle = {\n  backgroundColor: 'var(--color-deep-sky-aqua)',\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px black\"\n}\n\nexport default class DrumPad extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n          padStyle: inactiveStyle\n        }  \n        this.playSound =  this.playSound.bind(this); \n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.activatePad = this.activatePad.bind(this);\n    }\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleKeyPress);\n    }\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    handleKeyPress(e) {\n      if (e.keyCode === this.props.keyCode) {\n        this.playSound();\n      }\n    }\n    activatePad() {\n      if (this.props.power) {\n        this.state.padStyle.backgroundColor === \"var(--color-dk-cyan)\"\n          ? this.setState({\n              padStyle: inactiveStyle\n            })\n          : this.setState({\n              padStyle: activeStyle\n            });\n      } else {\n        this.state.padStyle.marginTop === 13\n          ? this.setState({\n              padStyle: inactiveStyle\n            })\n          : this.setState({\n              padStyle: {\n                height: 77,\n                marginTop: 13,\n                backgroundColor: \"var(--color-deep-navy-blue)\",\n                boxShadow: \"0 3px var(--color-deep-navy-blue)\"\n              }\n          });\n      }\n    }\n    playSound(e) {\n      const sound = document.getElementById(this.props.keyTrigger);\n      sound.currentTime = 0;\n      sound.play();\n      this.activatePad();\n      setTimeout(() => this.activatePad(), 100);\n      this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n    }\n    render() {\n      return (\n        <div id={this.props.clipId} onClick={this.playSound} className=\"drum-pad\" style={this.state.padStyle} >\n          <audio className='clip' id={this.props.keyTrigger} src={this.props.clip}></audio>\n          {this.props.keyTrigger}\n        </div>\n      )\n    }\n}\n\n\n\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport Container from 'react-bootstrap/Container';\n\nimport {Header} from '../src/components/Header';\nimport {Footer} from '../src/components/Footer';\nimport DrumPad from '../src/components/DrumPad';\n\n\n\n\n\nconst bankOne = [{\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Heater-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Heater-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Heater-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Heater-4\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Clap\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Kick-n-Hat\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n];\n\nconst bankTwo = [{\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Chord-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Chord-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Chord-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Shaker\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Punchy-Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Side-Stick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Snare\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n];\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: true,\n      display: String.fromCharCode(160),\n      currentPadBank: bankOne,\n      currentPadBankId: 'Heater Kit',\n      sliderVal: 0.3\n    }\n    this.displayClipName = this.displayClipName.bind(this);\n    this.selectBank = this.selectBank.bind(this);\n    this.adjustVolume = this.adjustVolume.bind(this);\n    this.powerControl = this.powerControl.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n  }\n  powerControl() {\n    this.setState({\n      power: !this.state.power,\n      display: String.fromCharCode(160)\n    });\n  }\n  selectBank() {\n    if (this.state.power) {\n      this.state.currentPadBankId === 'Heater Kit' ? this.setState({\n        currentPadBank: bankTwo,\n        display: 'Smooth Piano Kit', \n        currentPadBankId: 'Smooth Piano Kit', \n      }) : this.setState({\n        currentPadBank: bankOne,\n        display: 'Heater Kit',\n        currentPadBankId: 'Heater Kit',\n      });\n    }\n  }\n  displayClipName(name) {\n    if (this.state.power) {\n      this.setState({\n        display: name\n      });\n    }\n  }\n  adjustVolume(e){\n    if (this.state.power) {\n      this.setState({\n        sliderVal: e.target.value,\n        display: \"Volume: \" + Math.round(e.target.value * 100)\n      });\n      setTimeout(() => this.clearDisplay(),100);\n    }\n  }\n  clearDisplay() {\n    this.setState({\n      display: String.fromCharCode(160)\n    });\n  }\n\n  render() {\n    const powerSlider = this.state.power ? {\n      float: 'right'\n    } : {\n      float: 'left'\n    };\n    const bankSlider = this.state.currentPadBank === bankOne ? {\n      float: 'left'\n    }: {\n      float: 'right'\n    }; {\n      const clips = [].slice.call(document.getElementsByClassName('clip'));\n      clips.forEach(sound => {\n        sound.volume = this.state.sliderVal\n      });\n    }\n\n\n    return (\n      <Container className=\"container\">\n        <Header />\n        <div id=\"drum-machine\" className=\"drum\">\n          <PadBank\n            power={this.state.power}\n            updateDisplay={this.displayClipName}\n            clipVolume={this.state.sliderVal}\n            currentPadBank={this.state.currentPadBank}\n          />\n          <div className=\"control-container\">\n            <div className=\"control\">\n              <p>Power</p>\n              <div onClick={this.powerControl} className=\"select\">\n                <div style={powerSlider} className=\"inner\" />\n              </div>\n            </div>\n            <h1 id=\"display\" className=\"drum-display\">\n              {this.state.display}\n            </h1>\n            <div className=\"volume-slider\">\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={this.state.sliderVal}\n                onChange={this.adjustVolume}\n              />\n            </div>\n            <div className=\"control\">\n              <p>Bank</p>\n              <div onClick={this.selectBank} className=\"select\">\n                <div style={bankSlider} className=\"inner\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nclass PadBank extends Component {\n  // eslint-disable-next-line \n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let padBank; \n    this.props.power ? padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n      return (\n        <DrumPad clipId={padBankArr[i].id} clip={padBankArr[i].url} keyTrigger={padBankArr[i].keyTrigger} keyCode={padBankArr[i].keyCode} updateDisplay={this.props.updateDisplay} power={this.props.power} />\n      )\n    }) : padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n      return (\n        <DrumPad clipId={padBankArr[i].id} clip=\"#\" keyTrigger={padBankArr[i].keyTrigger} keyCode={padBankArr[i].keyCode} updateDisplay={this.props.updateDisplay} power={this.props.power} />\n      )\n    });\n    return (\n      <div className=\"pad-bank\">\n        {padBank}\n      </div>\n    )\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}